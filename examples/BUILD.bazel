load("@bazel_binaries//:defs.bzl", "bazel_binaries")
load(
    "@rules_bazel_integration_test//bazel_integration_test:defs.bzl",
    "bazel_integration_test",
    "bazel_integration_tests",
    "default_test_runner",
    "integration_test_utils",
)

# gazelle:exclude customized
# gazelle:exclude full

default_test_runner(
    name = "default_test_runner",
    bazel_cmds = [
        "info",
        "run @tweag-credential-helper//installer",
        "shutdown",
        "test //...",
    ],
)

default_test_runner(
    name = "customized_installer_test_runner",
    bazel_cmds = [
        "info",
        "run //:custom_installer",
        "shutdown",
        "test //...",
    ],
)

bazel_integration_tests(
    name = "full_test",
    additional_env_inherit = [
        "AWS_DEFAULT_REGION",
        "AWS_REGION",
        "AWS_ACCESS_KEY_ID",
        "AWS_SECRET_ACCESS_KEY",
        "AWS_SESSION_TOKEN",
        "CREDENTIAL_HELPER_LOGGING",
        "GH_TOKEN",
        "GITHUB_TOKEN",
        "GOOGLE_APPLICATION_CREDENTIALS",
    ],
    bazel_versions = bazel_binaries.versions.all,
    test_runner = ":default_test_runner",
    workspace_files = integration_test_utils.glob_workspace_files("full") + [
        "//examples/testing:all_files",
        "//bzl/private/source_files:release_src_files",
    ],
    workspace_path = "full",
)

bazel_integration_tests(
    name = "customized_test",
    bazel_versions = bazel_binaries.versions.all,
    # This integration test does not use real credentials.
    # It is safe to enable debug logging by default.
    env = {"CREDENTIAL_HELPER_LOGGING": "debug"},
    test_runner = ":customized_installer_test_runner",
    workspace_files = integration_test_utils.glob_workspace_files("customized") + [
        "//examples/testing:all_files",
        "//bzl/private/source_files:release_src_files",
    ],
    workspace_path = "customized",
)

test_suite(
    name = "integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = integration_test_utils.bazel_integration_test_names(
        "customized_test",
        bazel_binaries.versions.all,
    ) + integration_test_utils.bazel_integration_test_names(
        "full_test",
        bazel_binaries.versions.all,
    ),
    visibility = ["//:__subpackages__"],
)

filegroup(
    name = "all_files",
    srcs = glob(["*"]),
    visibility = ["//:__subpackages__"],
)
