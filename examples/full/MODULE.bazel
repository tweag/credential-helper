module(
    name = "full_example",
    version = "0.0.0",
)

# BEGIN BAZEL_DEP
bazel_dep(
    name = "tweag-credential-helper",
    version = "0.0.0",
)
local_path_override(
    module_name = "tweag-credential-helper",
    path = "../..",
)
# END BAZEL_DEP

bazel_dep(
    name = "tweag-credential-helper-testing",
    version = "0.0.0",
)
local_path_override(
    module_name = "tweag-credential-helper-testing",
    path = "../testing",
)

# in dev builds, we do not have prebuilt helper binaries
# for that reason, we register a Go toolchain to build the helper from source
bazel_dep(name = "rules_go", version = "0.54.0", dev_dependency = True)

bazel_dep(name = "rules_python", version = "1.5.1")
bazel_dep(name = "aspect_rules_js", version = "2.4.0")
bazel_dep(name = "rules_nodejs", version = "6.3.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(python_version = "3.11")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    experimental_index_url = "https://oauth2accesstoken@europe-west8-python.pkg.dev/git-credential-helper-dev/python-test-repository/simple",
    hub_name = "pypi",
    python_version = "3.11",
    quiet = False,
    requirements_lock = "//:python/requirements.txt",
)
use_repo(pip, "pypi")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(node_version = "16.14.2")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//nodejs:.npmrc",
    pnpm_lock = "//nodejs:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk", dev_dependency = True)
go_sdk.download(version = "1.24.2")

bazel_dep(name = "rules_oci", version = "2.2.3")

http_file = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")

http_file(
    name = "private_github_repo_file",
    integrity = "sha256-geRViD7FxlM37de9EEW0/qUP7wk7QGNtlqqAAevVSRA=",
    urls = ["https://raw.githubusercontent.com/tweag/credential-helper-private/606312d9f8467ed4368cf8b126b95c161ba5de28/hello.txt"],
)

http_file(
    name = "hello_world_s3",
    integrity = "sha256-PPMlDTQUjT/gPEqOsaOGlblp/5bsa/zl+fVEJ5+ypd8=",
    urls = ["https://malte-s3-bazel-test.s3.amazonaws.com/hello_world"],
)

http_file(
    name = "s3_regional_virtual_host_style",
    integrity = "sha256-6Hn3a3usjv/kzFO84DTyWM4VsoJfMBjHB48l6DLD/rg=",
    urls = ["https://malte-s3-public-test.s3.eu-north-1.amazonaws.com/release/v1.30.2/release-notes.json"],
)

http_file(
    name = "s3_regional_path_style",
    integrity = "sha256-kJtiyAtc4fUHXJyTAfeWc3J6d8RqUl8SxHUzcFNr/iw=",
    urls = ["https://s3.eu-north-1.amazonaws.com/malte-s3-public-test/release/v1.30.3/release-notes.json"],
)

http_file(
    name = "hello_world_r2",
    integrity = "sha256-30vzSs1zKPpvC2kT3MVrRQtoiKVicYyL+XDpuWhRFPU=",
    urls = ["https://47ffb5f0a156e14a0985028c836501e2.r2.cloudflarestorage.com/r2-private-example/hello_world"],
)

http_file(
    name = "hello_world_gcs",
    integrity = "sha256-/Llq5Bi4Y+uTiDqUzDn4FUXP35fiDSku0b2PeKFTztw=",
    urls = ["https://storage.googleapis.com/rules_gcs/hello_world"],
)

http_file(
    name = "hello_world_blob_storage",
    integrity = "sha256-yYwktnfv9Ehgr+pvSTu67FuxxMuyCcb8K7tH9m/yrTE=",
    urls = ["https://chsbstorage.blob.core.windows.net/gh-test-container/hello_world"],
)

# temporarily removed until CI has required access
# http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# http_archive(
#     name = "private_github_repo",
#     build_file_content = """exports_files(glob(["**"]))""",
#     integrity = "sha256-/M5gC3mcEjAUvQtByW3jYMWnwR7eD3NTs7ZWUp2QcAI=",
#     strip_prefix = "credential-helper-private-0.0.1",
#     urls = ["https://github.com/tweag/credential-helper-private/archive/refs/tags/v0.0.1.tar.gz"],
# )

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "ghcr_oci",
    digest = "sha256:2d4e459f4ecb5329407ae3e47cbc107a2fbace221354ca75960af4c047b3cb13",
    image = "ghcr.io/tweag/credential-helper-private-image",
)
oci.pull(
    name = "docker_hub_hello_world",
    digest = "sha256:5b3cc85e16e3058003c13b7821318369dad01dac3dbb877aac3c28182255c724",
    image = "hello-world",
    platforms = ["linux/amd64"],
)
use_repo(oci, "docker_hub_hello_world", "docker_hub_hello_world_linux_amd64", "ghcr_oci")
